title = "Termékek"
url = "/termekek/:category/:slug?/:child?"
layout = "default"
==
<?php
use LivestudioDev\Lscart\Models\Category;
use LivestudioDev\Lscart\Models\Product;
use Illuminate\Pagination\LengthAwarePaginator;
use Illuminate\Support\Facades\Cache;

function onStart()
{
    $this->loadProducts();
    $this->organizeCode();
   


    $this['code'] = new class() {

    };

}

// function onLoadProducts() {
//     $loadingModal = false;
//     $loadProductsArray = $this->loadProducts();

//     return [
//         '#products' => $this->renderPartial('pages/products', [
//             'products' => $loadProductsArray['products'],
//             'orderBy' => $loadProductsArray['orderBy'],
//             'pagination_url' => $loadProductsArray['pagination_url'],
//             'breadcrumbs' => $loadProductsArray['breadcrumbs'],
//             'category' => $loadProductsArray['category'],
//             'loadingModal' => $loadingModal,
//         ]),
//     ];
// }

function loadProducts()
{
    $categorySlug = $this->param('category');
    $childSlug = $this->param('child');
    $slug = $this->param('slug');
    $page = request('page', 1);
    $perPage = 15;

    $filter_inputs = collect(Input::all())->except('price_min', 'price_max', 'page', 'orderBy')->filter(function($filter, $key) {
        if(strpos($key,"filter_") !== false) {
            return $filter;
        }
    });

    $category = Category::where('slug', $childSlug ?? $slug ?? $categorySlug)->first();

    if (!$category) {
        return redirect("/404");
    }

    $this['category'] = $category;

    $categoryId = $category->id;

    if (count($category->children) > 0) {
        $childCategoryIds = $category->getAllChildren()->pluck('id')->toArray();
    }

    $childCategoryIds[] = $categoryId;

    $products = Product::with('properties', 'image', 'gallery')->where(function ($query) use ($categoryId, $childCategoryIds) {
        $query->where('category_id', $categoryId)
              ->orWhereIn('category_id', $childCategoryIds);
    });

    $this->loadDynamicFilters($products, $filter_inputs);
    
    $sortDir = request('orderBy');
    
    if ($sortDir) {
        $products = $this->applySorting($products, $sortDir);
    } else {
        $products = $products->orderBy('created_at', 'ASC');
    }
    
    $filterString = http_build_query(['filter' => $filter_inputs->toArray()]);

    $paginationUrl = $this->generatePaginationUrl($sortDir, $filterString);

    $cacheKey = "category_{$categoryId}_page_{$page}_sort_{$sortDir}_filter_{$filterString}";

    [$total, $products] = Cache::remember($cacheKey, 600, function () use ($products, $perPage, $page) {
        $total = $products->count();
        $products = $products->skip(($page - 1) * $perPage)->take($perPage)->get();
        return [$total, $products->toArray()];
    });
    
    $products = Product::hydrate($products);
   
    $inputs = Input::all();
    
    

    $this['products'] = new LengthAwarePaginator(
        $products,
        $total,
        $perPage,
        $page,
        [
            'path' => url($paginationUrl),
            'query' => $inputs,
        ]
    );
    
   
    $this['orderBy'] = $sortDir;
    $this['pagination_url'] = $paginationUrl;
    $this['breadcrumbs'] = $this->generateBreadcrumbs($category);

}

function applySorting($products, $sortDir)
{
    switch ($sortDir) {
        case 'popular':
            return $products->orderBy('created_at', 'ASC');
        case 'price_asc':
            return $products->orderBy('price', 'ASC');
        case 'price_desc':
            return $products->orderBy('price', 'DESC');
        case 'abc_asc':
            return $products->orderBy('name', 'ASC');
        case 'abc_desc':
            return $products->orderBy('name', 'DESC');
        default:
            return $products->orderBy('created_at', 'ASC');
    }
}

function generatePaginationUrl($sortDir, $filterString)
{
    $params = ['category', 'slug', 'child'];
    $values = array_map([$this, 'param'], $params);

    $paginationUrl = "termekek/" . implode('/', $values);

    return $paginationUrl;
}

function generateBreadcrumbs($category)
{
    $breadcrumbs = [];

    while ($category) {
        array_unshift($breadcrumbs, [
            'name' => $category->name,
            'url' => $category->slug
        ]);
        $category = $category->parent;
    }

    return $breadcrumbs;
}

function loadDynamicFilters($products, $filter_inputs)
{
    
    $dynamicFilters = [];

    if (count($filter_inputs) > 0 ) {

            foreach ($filter_inputs as $input => $value) {

                $property_id = explode("_", $input)[1];
                $array_index = explode("_", $input)[2];

                $dynamicFilters[$property_id][] = $value[0];

            }

            $products->where(function ($product) use ($filter_inputs) {

                $product->whereHas('properties', function ($property) use ($filter_inputs) {

                    $index = 0;

                    foreach ($filter_inputs as $input => $value) {

                        if ($value == null || $value == "" || !$value) {
                            continue;
                        }
            
                        $property_id = explode("_", $input)[1];
                        $array_index = explode("_", $input)[2];

                        if ($index == 0) {

                            $property->where([
                                ['livestudiodev_lscart_propertables.property_id', $property_id], 
                                ['livestudiodev_lscart_propertables.propertable_value', $array_index]
                            ]);

                        } else {

                            $property->orWhere([
                                ['livestudiodev_lscart_propertables.property_id', $property_id], 
                                ['livestudiodev_lscart_propertables.propertable_value', $array_index]
                            ]);

                        }

                        $index++;
                    
                    }
                    
                });

            });
                
    }

    //dd($dynamicFilters);

    $this['dynamic_filters'] = $dynamicFilters;

}

function organizeCode()
{
    // Additional code organization if needed
    // ...
}
?>
==

<div class="w-full bg-gradient-to-b from-[#00000020] to-transparent">
    <div class="container w-11/12 mx-auto py-2">
        {% partial "product/breadcrumb" breadcrumbs=breadcrumbs %}
    </div>
</div>
<div id="products" class="xl:mt-10 container w-11/12 2xl:w-8/12 xl:w-9/12 lg:w-9/12 mx-auto">
    
    <!-- <div class="fixed left-0 top-0 h-screen w-[1px] z-[99] xl:hidden">
        <button
        @click="openModal = 'productFilterModal'"
        type="button"
        class="bg-black gap-3 -rotate-90 !w-[100px] absolute text-white font-bold top-[50%] -translate-y-[50%] text-[15px]
        -left-[37px] py-[2px]">
            Szűrés
        </button>
    </div> -->

    <div id="shippingCost">
        {% partial 'cart/shippingCost' %}
    </div>

    <div class="flex flex-wrap mt-10 items-start">

        <!-- <div class="2xl:w-3/12 xl:w-3/12 lg:w-4/12 md:w-6/12 w-full md:pr-4 mb-5 xl:min-h-screen hidden xl:block">
            <div class="bg-[#0F0F10] shadow-lg mb-6 z-10">
                {% partial 'product/filter' dynamic_filters=dynamic_filters filter=filter %}
            </div>
        </div> -->

        <!-- Filter modal -->

        <div :class="{ '!opacity-100 !max-w-[85%]': openModal == 'productFilterModal' }" 
            class="fixed top-0 right-0 h-screen w-full max-w-[0%] overflow-auto opacity-0 transition-all ease-in-out duration-200 bg-[#161719] z-[999999]">
            <div class="bg-[#000] flex items-center justify-between px-3 py-3 sticky top-0 z-50">
                <img src="{{ 'assets/images/logo.png'|theme }}" loading="lazy"
                class="object-contain logo h-full w-[100px]" 
                alt="">

                <button @click="openModal = 'null'" class="w-8 h-8 min-w-[32px] min-h-[32px] bg-[#666] flex items-center justify-center text-white rounded-full"> 
                    <i class="fa-solid fa-xmark"></i>
                </button>
            </div>

            <div class="py-2" >
                {% partial 'product/filter' dynamic_filters=dynamic_filters filter=filter %}
            </div>
        </div>

        <!-- /Filter modal -->   

        <div class="w-full">
            <h1 class="text-primary xl:text-3xl text-2xl font-bold mb-3">
                {{ category.name }}
            </h1>
        
            <div class="mb-6 text-sm">
                {{ category.description|raw }}
            </div>

            <div class="grid xl:grid-cols-4 grid-cols-2 gap-2 mb-6">
                {% for child in category.children %}

                <a href="{{ 'termekek'|page({category: category.slug, slug: child.slug}) }}">
                    <div class="bg-[#30323750] hover:bg-[#2B3990] text-white xl:px-4 px-2 xl:h-[65px] h-[55px] relative transition-all ease-in-out flex items-center">

                        <div class="xl:w-[40px] w-[26px] xl:min-w-[40px] min-w-[26px] h-8 mr-2">
                            <img src="{{ child.products[0].image.path }}" class="w-full h-full object-contain" alt="{{ child.name }}" loading="lazy">
                        </div>

                        <p class="font-semibold text-xs xl:text-sm"> 
                            {{ child.name|length > 25 ? child.name|slice(0, 25)~'...' : child.name }}
                        </p>

                    </div>
                </a>

                {% endfor %}
            </div>

            <div class="flex items-center mb-3 border-b border-neutral-700 xl:px-4 w-full overflow-x-auto">

                {% set sortings = [
                    [
                        'Népszerűség',
                        'popular',
                    ],
                    [
                        'Legolcsóbb elöl',
                        'price_asc',
                    ],
                    [
                        'Legdrágább elöl',
                        'price_desc',
                    ],
                    [
                        'Név szerint növekvő',
                        'abc_asc',
                    ],
                    [
                        'Név szerint csökkenő',
                        'abc_desc',
                    ],
                ] %}

            </div>

            {% if products|length == 0 %}
                <div class="w-full md:px-4 mb-5 flex items-center justify-center flex-col py-10 text-center text-white ">
                    <i class="fa-solid fa-face-sad-cry mb-2 text-5xl text-[#2B3990]"></i>
                    <p class="text-xl mt-3 font-bold">
                        Nem találtunk terméket
                    </p>
                    <p class="text-sm text-neutral-500">
                        A megadott keresési feltételek alapján nem találtunk terméket
                    </p>
                </div>
            {% else %}
                <div id="productList" class="grid xl:grid-cols-4 grid-cols-1 xl:gap-3 gap-1">
                    {% for product in products %}
                        {% partial 'elements/product/productBox' product=product %}
                    {% endfor %}
                </div>
            {% endif %} 


            <div class="flex items-center xl:w-max w-full mx-auto pagi mt-12">
                {{ products.render|raw }}
            </div>
        
        </div>
    </div>

</div>

{% put scripts %}
<script>

    function loadProducts() {

        $.request("onLoadProducts", {
            data: {}
        });

    }

	function retrieveOrderBy(event) {
		const orderVal = $(orderBySelected).val()

		$(event.target).find("input[name=orderBy]").val(orderVal);
	}

    function findFormAndSubmit() {
        $(".filterFrom").submit();
    }

	function retrieveOrderBy(event) {
		const orderVal = $(orderBySelected).val()

		$(event.target).find("input[name=orderBy]").val(orderVal);
	}


</script>
{% endput %}